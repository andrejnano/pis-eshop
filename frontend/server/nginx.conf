# Nginx server configuration
# Used for serving frontend static files

worker_processes auto;

events {
  worker_connections 1024;
}


http {
  charset utf-8;
  log_not_found off;

  keepalive_timeout 65;
  include /etc/nginx/mime.types;

  # logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	#
	limit_req_log_level warn;

  # TRAFFIC SHAPING, REGULATING AND LIMITING REQUESTS
  # Rate limiting per URI
  # this creates a "bucket" with a specific rate for a zone to accept
  # a new request, nginx uses the leaky bucket algorithm with the below
  # refresh rate. this simply creates a ticking interval at which a bool
  # value is set with incoming requests from a zone, all following requests
  # are either denied until the next tick, or accepted if
	limit_req_zone $request_uri zone=zone1:10m rate=5r/s;

  server {
    listen 3000;
    server_name localhost;

    root /srv/www/static/;
    index index.html;

    # Enable compression
    gzip on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # favicon.ico
    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    # robots.txt
    location = /robots.txt {
      log_not_found off;
      access_log off;
    }

    location ~ /\.(?!well-known).* {
      deny all;
    }

    # nginx stats page
    location /nginx_status {
      stub_status on;
      access_log off;
      allow all;
    }

    location / {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      # get static files from nginx
      try_files $uri $uri/ /index.html;
    }

    location /api {
      limit_req zone=zone1 burst=5;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass "http://backend:4000";
    }

  }
}
