# Nginx server configuration
# Used for serving frontend static files

worker_processes auto;

events {
  worker_connections 1024;
}

http {
  charset utf-8;
  # log_not_found off;

  # keepalive_timeout 65;
  # include /etc/nginx/mime.types;

  # # logging
	# access_log /var/log/nginx/access.log;
	# error_log /var/log/nginx/error.log warn;

	# #
	# limit_req_log_level warn;

  # # TRAFFIC SHAPING, REGULATING AND LIMITING REQUESTS
  # # Rate limiting per URI
  # # this creates a "bucket" with a specific rate for a zone to accept
  # # a new request, nginx uses the leaky bucket algorithm with the below
  # # refresh rate. this simply creates a ticking interval at which a bool
  # # value is set with incoming requests from a zone, all following requests
  # # are either denied until the next tick, or accepted if
	# limit_req_zone $request_uri zone=zone1:10m rate=5r/s;

  server {
    listen 80;
    listen [::]:80;

    server_name eshop.blue www.eshop.blue;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/html;
    }

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name eshop.blue www.eshop.blue;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/eshop.blue/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/eshop.blue/privkey.pem;
    ssl_buffer_size 8k;
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    root /data/www;
    index index.html index.htm index.nginx-debian.html;

    # Enable compression
    # gzip on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # favicon.ico
    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    # robots.txt
    location = /robots.txt {
      log_not_found off;
      access_log off;
    }

    # nginx stats page
    location /nginx_status {
      stub_status on;
      access_log off;
      allow all;
    }

    location / {
      # sendfile on;
      # tcp_nopush on;
      # tcp_nodelay on;
      # get static files from nginx
      try_files $uri index.html;
    }

    location /api {
      proxy_pass http://backend:4000;
      # limit_req zone=zone1 burst=5;
      # proxy_set_header Access-Control-Allow-Origin *;
      # proxy_set_header Host $host;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
      # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      # enable strict transport security only if you understand the implications
    }

  }
}
